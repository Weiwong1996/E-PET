<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.UserMapper">
	<resultMap id="BaseResultMap" type="entity.User">
		<id column="userid" property="userid" jdbcType="INTEGER" />
		<result column="uname" property="uname" jdbcType="VARCHAR" />
		<result column="uemail" property="uemail" jdbcType="VARCHAR" />
		<result column="uphone" property="uphone" jdbcType="VARCHAR" />
		<result column="uaddress" property="uaddress"
			jdbcType="VARCHAR" />
		<result column="upwd" property="upwd" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		userid, uname, uemail, uphone, uaddress, upwd
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where userid = #{userid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from user
		where userid = #{userid,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="entity.User">
		insert into user (userid, uname, uemail,
		uphone, uaddress, upwd
		)
		values (#{userid,jdbcType=INTEGER}, #{uname,jdbcType=VARCHAR},
		#{uemail,jdbcType=VARCHAR},
		#{uphone,jdbcType=VARCHAR}, #{uaddress,jdbcType=VARCHAR}, #{upwd,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="entity.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				userid,
			</if>
			<if test="uname != null">
				uname,
			</if>
			<if test="uemail != null">
				uemail,
			</if>
			<if test="uphone != null">
				uphone,
			</if>
			<if test="uaddress != null">
				uaddress,
			</if>
			<if test="upwd != null">
				upwd,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				#{userid,jdbcType=INTEGER},
			</if>
			<if test="uname != null">
				#{uname,jdbcType=VARCHAR},
			</if>
			<if test="uemail != null">
				#{uemail,jdbcType=VARCHAR},
			</if>
			<if test="uphone != null">
				#{uphone,jdbcType=VARCHAR},
			</if>
			<if test="uaddress != null">
				#{uaddress,jdbcType=VARCHAR},
			</if>
			<if test="upwd != null">
				#{upwd,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="entity.User">
		update user
		<set>
			<if test="uname != null">
				uname = #{uname,jdbcType=VARCHAR},
			</if>
			<if test="uemail != null">
				uemail = #{uemail,jdbcType=VARCHAR},
			</if>
			<if test="uphone != null">
				uphone = #{uphone,jdbcType=VARCHAR},
			</if>
			<if test="uaddress != null">
				uaddress = #{uaddress,jdbcType=VARCHAR},
			</if>
			<if test="upwd != null">
				upwd = #{upwd,jdbcType=VARCHAR},
			</if>
		</set>
		where userid = #{userid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="entity.User">
		update user
		set uname = #{uname,jdbcType=VARCHAR},
		uemail = #{uemail,jdbcType=VARCHAR},
		uphone = #{uphone,jdbcType=VARCHAR},
		uaddress = #{uaddress,jdbcType=VARCHAR},
		upwd = #{upwd,jdbcType=VARCHAR}
		where userid = #{userid,jdbcType=INTEGER}
	</update>

	<select id="getUseridByUname" resultMap="BaseResultMap"
		parameterType="String">
		select * from user where uname = #{uname}
	</select>

	<select id="doLogin" parameterType="entity.User"
		resultType="int">
		select count(userid) from user where uname = #{uname}
		and
		upwd = #{upwd}
	</select>

	<select id="getUserIdByAname" resultMap="BaseResultMap"
		parameterType="String">
		select * from user where uname = #{uname}
	</select>

	<select id="selectAllUsers" resultMap="BaseResultMap">
		select * from user
	</select>
</mapper>